/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkBz2 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public CkBz2(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(CkBz2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkBz2(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkBz2() {
    this(chilkatJNI.new_CkBz2(), true);
  }

  public boolean UncompressFile(String inFilename, String outFilename) {
    return chilkatJNI.CkBz2_UncompressFile(swigCPtr, this, inFilename, outFilename);
  }

  public boolean CompressFile(String inFilename, String outFilename) {
    return chilkatJNI.CkBz2_CompressFile(swigCPtr, this, inFilename, outFilename);
  }

  public boolean UncompressFileToMem(String inFilename, CkByteData outBytes) {
    return chilkatJNI.CkBz2_UncompressFileToMem(swigCPtr, this, inFilename, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean CompressFileToMem(String inFilename, CkByteData outBytes) {
    return chilkatJNI.CkBz2_CompressFileToMem(swigCPtr, this, inFilename, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean CompressMemToFile(CkByteData inData, String outFilename) {
    return chilkatJNI.CkBz2_CompressMemToFile(swigCPtr, this, CkByteData.getCPtr(inData), inData, outFilename);
  }

  public boolean UncompressMemToFile(CkByteData inData, String outFilename) {
    return chilkatJNI.CkBz2_UncompressMemToFile(swigCPtr, this, CkByteData.getCPtr(inData), inData, outFilename);
  }

  public boolean CompressMemory(CkByteData inData, CkByteData outBytes) {
    return chilkatJNI.CkBz2_CompressMemory(swigCPtr, this, CkByteData.getCPtr(inData), inData, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean UncompressMemory(CkByteData inData, CkByteData outBytes) {
    return chilkatJNI.CkBz2_UncompressMemory(swigCPtr, this, CkByteData.getCPtr(inData), inData, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean UnlockComponent(String regCode) {
    return chilkatJNI.CkBz2_UnlockComponent(swigCPtr, this, regCode);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkBz2_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkBz2_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkBz2_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkBz2_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkBz2_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public boolean SaveLastError(String filename) {
    return chilkatJNI.CkBz2_SaveLastError(swigCPtr, this, filename);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkBz2_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkBz2_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkBz2_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkBz2_lastErrorText(swigCPtr, this);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkBz2_lastErrorXml(swigCPtr, this);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkBz2_lastErrorHtml(swigCPtr, this);
  }

}
