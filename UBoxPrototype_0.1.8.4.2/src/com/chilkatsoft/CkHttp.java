/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkHttp {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public CkHttp(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(CkHttp obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkHttp(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkHttp() {
    this(chilkatJNI.new_CkHttp(), true);
  }

  public String lastErrorText() {
    return chilkatJNI.CkHttp_lastErrorText(swigCPtr, this);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkHttp_lastErrorXml(swigCPtr, this);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkHttp_lastErrorHtml(swigCPtr, this);
  }

  public boolean RenderGet(String url, CkString outStr) {
    return chilkatJNI.CkHttp_RenderGet(swigCPtr, this, url, CkString.getCPtr(outStr), outStr);
  }

  public String renderGet(String url) {
    return chilkatJNI.CkHttp_renderGet(swigCPtr, this, url);
  }

  public boolean GetCookieXml(String domain, CkString outStr) {
    return chilkatJNI.CkHttp_GetCookieXml(swigCPtr, this, domain, CkString.getCPtr(outStr), outStr);
  }

  public String getCookieXml(String domain) {
    return chilkatJNI.CkHttp_getCookieXml(swigCPtr, this, domain);
  }

  public void get_RequiredContentType(CkString str) {
    chilkatJNI.CkHttp_get_RequiredContentType(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String requiredContentType() {
    return chilkatJNI.CkHttp_requiredContentType(swigCPtr, this);
  }

  public void put_RequiredContentType(String newVal) {
    chilkatJNI.CkHttp_put_RequiredContentType(swigCPtr, this, newVal);
  }

  public boolean DownloadAppend(String url, String filename) {
    return chilkatJNI.CkHttp_DownloadAppend(swigCPtr, this, url, filename);
  }

  public CkHttpResponse PostMime(String url, String mime) {
    long cPtr = chilkatJNI.CkHttp_PostMime(swigCPtr, this, url, mime);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public boolean UrlDecode(String str, CkString outStr) {
    return chilkatJNI.CkHttp_UrlDecode(swigCPtr, this, str, CkString.getCPtr(outStr), outStr);
  }

  public String urlDecode(String str) {
    return chilkatJNI.CkHttp_urlDecode(swigCPtr, this, str);
  }

  public boolean UrlEncode(String str, CkString outStr) {
    return chilkatJNI.CkHttp_UrlEncode(swigCPtr, this, str, CkString.getCPtr(outStr), outStr);
  }

  public String urlEncode(String str) {
    return chilkatJNI.CkHttp_urlEncode(swigCPtr, this, str);
  }

  public void get_SslProtocol(CkString str) {
    chilkatJNI.CkHttp_get_SslProtocol(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String sslProtocol() {
    return chilkatJNI.CkHttp_sslProtocol(swigCPtr, this);
  }

  public void put_SslProtocol(String newVal) {
    chilkatJNI.CkHttp_put_SslProtocol(swigCPtr, this, newVal);
  }

  public CkHttpResponse GetHead(String url) {
    long cPtr = chilkatJNI.CkHttp_GetHead(swigCPtr, this, url);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public boolean XmlRpc(String urlEndpoint, String xmlIn, CkString outStr) {
    return chilkatJNI.CkHttp_XmlRpc(swigCPtr, this, urlEndpoint, xmlIn, CkString.getCPtr(outStr), outStr);
  }

  public String xmlRpc(String urlEndpoint, String xmlIn) {
    return chilkatJNI.CkHttp_xmlRpc(swigCPtr, this, urlEndpoint, xmlIn);
  }

  public void GenTimeStamp(CkString outStr) {
    chilkatJNI.CkHttp_GenTimeStamp(swigCPtr, this, CkString.getCPtr(outStr), outStr);
  }

  public String genTimeStamp() {
    return chilkatJNI.CkHttp_genTimeStamp(swigCPtr, this);
  }

  public boolean XmlRpcPut(String urlEndpoint, String xmlIn, CkString outStr) {
    return chilkatJNI.CkHttp_XmlRpcPut(swigCPtr, this, urlEndpoint, xmlIn, CkString.getCPtr(outStr), outStr);
  }

  public String xmlRpcPut(String urlEndpoint, String xmlIn) {
    return chilkatJNI.CkHttp_xmlRpcPut(swigCPtr, this, urlEndpoint, xmlIn);
  }

  public boolean QuickPutStr(String url, CkString outStr) {
    return chilkatJNI.CkHttp_QuickPutStr(swigCPtr, this, url, CkString.getCPtr(outStr), outStr);
  }

  public String quickPutStr(String url) {
    return chilkatJNI.CkHttp_quickPutStr(swigCPtr, this, url);
  }

  public boolean QuickDeleteStr(String url, CkString outStr) {
    return chilkatJNI.CkHttp_QuickDeleteStr(swigCPtr, this, url, CkString.getCPtr(outStr), outStr);
  }

  public String quickDeleteStr(String url) {
    return chilkatJNI.CkHttp_quickDeleteStr(swigCPtr, this, url);
  }

  public boolean PutText(String url, String textData, String charset, String contentType, boolean md5, boolean gzip, CkString outStr) {
    return chilkatJNI.CkHttp_PutText(swigCPtr, this, url, textData, charset, contentType, md5, gzip, CkString.getCPtr(outStr), outStr);
  }

  public String putText(String url, String textData, String charset, String contentType, boolean md5, boolean gzip) {
    return chilkatJNI.CkHttp_putText(swigCPtr, this, url, textData, charset, contentType, md5, gzip);
  }

  public boolean PutBinary(String url, CkByteData byteData, String contentType, boolean md5, boolean gzip, CkString outStr) {
    return chilkatJNI.CkHttp_PutBinary(swigCPtr, this, url, CkByteData.getCPtr(byteData), byteData, contentType, md5, gzip, CkString.getCPtr(outStr), outStr);
  }

  public String putBinary(String url, CkByteData byteData, String contentType, boolean md5, boolean gzip) {
    return chilkatJNI.CkHttp_putBinary(swigCPtr, this, url, CkByteData.getCPtr(byteData), byteData, contentType, md5, gzip);
  }

  public int get_SendBufferSize() {
    return chilkatJNI.CkHttp_get_SendBufferSize(swigCPtr, this);
  }

  public void put_SendBufferSize(int newVal) {
    chilkatJNI.CkHttp_put_SendBufferSize(swigCPtr, this, newVal);
  }

  public boolean get_NegotiateAuth() {
    return chilkatJNI.CkHttp_get_NegotiateAuth(swigCPtr, this);
  }

  public void put_NegotiateAuth(boolean newVal) {
    chilkatJNI.CkHttp_put_NegotiateAuth(swigCPtr, this, newVal);
  }

  public void get_LoginDomain(CkString str) {
    chilkatJNI.CkHttp_get_LoginDomain(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String loginDomain() {
    return chilkatJNI.CkHttp_loginDomain(swigCPtr, this);
  }

  public void put_LoginDomain(String newVal) {
    chilkatJNI.CkHttp_put_LoginDomain(swigCPtr, this, newVal);
  }

  public int get_SocksVersion() {
    return chilkatJNI.CkHttp_get_SocksVersion(swigCPtr, this);
  }

  public void put_SocksVersion(int newVal) {
    chilkatJNI.CkHttp_put_SocksVersion(swigCPtr, this, newVal);
  }

  public int get_SocksPort() {
    return chilkatJNI.CkHttp_get_SocksPort(swigCPtr, this);
  }

  public void put_SocksPort(int newVal) {
    chilkatJNI.CkHttp_put_SocksPort(swigCPtr, this, newVal);
  }

  public void get_SocksUsername(CkString str) {
    chilkatJNI.CkHttp_get_SocksUsername(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String socksUsername() {
    return chilkatJNI.CkHttp_socksUsername(swigCPtr, this);
  }

  public void put_SocksUsername(String newVal) {
    chilkatJNI.CkHttp_put_SocksUsername(swigCPtr, this, newVal);
  }

  public void get_SocksPassword(CkString str) {
    chilkatJNI.CkHttp_get_SocksPassword(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String socksPassword() {
    return chilkatJNI.CkHttp_socksPassword(swigCPtr, this);
  }

  public void put_SocksPassword(String newVal) {
    chilkatJNI.CkHttp_put_SocksPassword(swigCPtr, this, newVal);
  }

  public void get_SocksHostname(CkString str) {
    chilkatJNI.CkHttp_get_SocksHostname(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String socksHostname() {
    return chilkatJNI.CkHttp_socksHostname(swigCPtr, this);
  }

  public void put_SocksHostname(String newVal) {
    chilkatJNI.CkHttp_put_SocksHostname(swigCPtr, this, newVal);
  }

  public CkHttpResponse PostXml(String url, String xmlDoc, String charset) {
    long cPtr = chilkatJNI.CkHttp_PostXml(swigCPtr, this, url, xmlDoc, charset);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public CkCert GetServerSslCert(String domain, int port) {
    long cPtr = chilkatJNI.CkHttp_GetServerSslCert(swigCPtr, this, domain, port);
    return (cPtr == 0) ? null : new CkCert(cPtr, false);
  }

  public boolean get_DigestAuth() {
    return chilkatJNI.CkHttp_get_DigestAuth(swigCPtr, this);
  }

  public void put_DigestAuth(boolean newVal) {
    chilkatJNI.CkHttp_put_DigestAuth(swigCPtr, this, newVal);
  }

  public boolean SetSslClientCertPfx(String pfxFilename, String pfxPassword) {
    return chilkatJNI.CkHttp_SetSslClientCertPfx(swigCPtr, this, pfxFilename, pfxPassword);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkHttp_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkHttp_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public void ClearInMemoryCookies() {
    chilkatJNI.CkHttp_ClearInMemoryCookies(swigCPtr, this);
  }

  public boolean SetCookieXml(String domain, String cookieXml) {
    return chilkatJNI.CkHttp_SetCookieXml(swigCPtr, this, domain, cookieXml);
  }

  public CkHttpResponse PostUrlEncoded(String url, CkHttpRequest req) {
    long cPtr = chilkatJNI.CkHttp_PostUrlEncoded(swigCPtr, this, url, CkHttpRequest.getCPtr(req), req);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public boolean PostBinary(String url, CkByteData byteData, String contentType, boolean md5, boolean gzip, CkString outStr) {
    return chilkatJNI.CkHttp_PostBinary(swigCPtr, this, url, CkByteData.getCPtr(byteData), byteData, contentType, md5, gzip, CkString.getCPtr(outStr), outStr);
  }

  public String postBinary(String url, CkByteData byteData, String contentType, boolean md5, boolean gzip) {
    return chilkatJNI.CkHttp_postBinary(swigCPtr, this, url, CkByteData.getCPtr(byteData), byteData, contentType, md5, gzip);
  }

  public CkHttpResponse QuickGetObj(String url) {
    long cPtr = chilkatJNI.CkHttp_QuickGetObj(swigCPtr, this, url);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public void get_SessionLogFilename(CkString str) {
    chilkatJNI.CkHttp_get_SessionLogFilename(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String sessionLogFilename() {
    return chilkatJNI.CkHttp_sessionLogFilename(swigCPtr, this);
  }

  public void put_SessionLogFilename(String newVal) {
    chilkatJNI.CkHttp_put_SessionLogFilename(swigCPtr, this, newVal);
  }

  public void get_BgLastErrorText(CkString str) {
    chilkatJNI.CkHttp_get_BgLastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String bgLastErrorText() {
    return chilkatJNI.CkHttp_bgLastErrorText(swigCPtr, this);
  }

  public void get_BgResultData(CkByteData data) {
    chilkatJNI.CkHttp_get_BgResultData(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public int get_BgResultInt() {
    return chilkatJNI.CkHttp_get_BgResultInt(swigCPtr, this);
  }

  public void get_BgResultString(CkString str) {
    chilkatJNI.CkHttp_get_BgResultString(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String bgResultString() {
    return chilkatJNI.CkHttp_bgResultString(swigCPtr, this);
  }

  public boolean get_BgTaskFinished() {
    return chilkatJNI.CkHttp_get_BgTaskFinished(swigCPtr, this);
  }

  public boolean get_BgTaskRunning() {
    return chilkatJNI.CkHttp_get_BgTaskRunning(swigCPtr, this);
  }

  public boolean get_BgTaskSuccess() {
    return chilkatJNI.CkHttp_get_BgTaskSuccess(swigCPtr, this);
  }

  public int get_EventLogCount() {
    return chilkatJNI.CkHttp_get_EventLogCount(swigCPtr, this);
  }

  public boolean get_KeepEventLog() {
    return chilkatJNI.CkHttp_get_KeepEventLog(swigCPtr, this);
  }

  public void put_KeepEventLog(boolean newVal) {
    chilkatJNI.CkHttp_put_KeepEventLog(swigCPtr, this, newVal);
  }

  public boolean get_UseBgThread() {
    return chilkatJNI.CkHttp_get_UseBgThread(swigCPtr, this);
  }

  public void put_UseBgThread(boolean newVal) {
    chilkatJNI.CkHttp_put_UseBgThread(swigCPtr, this, newVal);
  }

  public CkHttpResponse BgResponseObject() {
    long cPtr = chilkatJNI.CkHttp_BgResponseObject(swigCPtr, this);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public void BgTaskAbort() {
    chilkatJNI.CkHttp_BgTaskAbort(swigCPtr, this);
  }

  public void ClearBgEventLog() {
    chilkatJNI.CkHttp_ClearBgEventLog(swigCPtr, this);
  }

  public boolean EventLogName(int index, CkString outStr) {
    return chilkatJNI.CkHttp_EventLogName(swigCPtr, this, index, CkString.getCPtr(outStr), outStr);
  }

  public String eventLogName(int index) {
    return chilkatJNI.CkHttp_eventLogName(swigCPtr, this, index);
  }

  public boolean EventLogValue(int index, CkString outStr) {
    return chilkatJNI.CkHttp_EventLogValue(swigCPtr, this, index, CkString.getCPtr(outStr), outStr);
  }

  public String eventLogValue(int index) {
    return chilkatJNI.CkHttp_eventLogValue(swigCPtr, this, index);
  }

  public void SleepMs(int millisec) {
    chilkatJNI.CkHttp_SleepMs(swigCPtr, this, millisec);
  }

  public void get_ClientIpAddress(CkString str) {
    chilkatJNI.CkHttp_get_ClientIpAddress(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String clientIpAddress() {
    return chilkatJNI.CkHttp_clientIpAddress(swigCPtr, this);
  }

  public void put_ClientIpAddress(String newVal) {
    chilkatJNI.CkHttp_put_ClientIpAddress(swigCPtr, this, newVal);
  }

  public void get_ProxyAuthMethod(CkString str) {
    chilkatJNI.CkHttp_get_ProxyAuthMethod(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String proxyAuthMethod() {
    return chilkatJNI.CkHttp_proxyAuthMethod(swigCPtr, this);
  }

  public void put_ProxyAuthMethod(String newVal) {
    chilkatJNI.CkHttp_put_ProxyAuthMethod(swigCPtr, this, newVal);
  }

  public boolean AddQuickHeader(String name, String value) {
    return chilkatJNI.CkHttp_AddQuickHeader(swigCPtr, this, name, value);
  }

  public boolean RemoveQuickHeader(String name) {
    return chilkatJNI.CkHttp_RemoveQuickHeader(swigCPtr, this, name);
  }

  public boolean SetSslClientCertPem(String pemDataOrFilename, String pemPassword) {
    return chilkatJNI.CkHttp_SetSslClientCertPem(swigCPtr, this, pemDataOrFilename, pemPassword);
  }

  public boolean get_AllowGzip() {
    return chilkatJNI.CkHttp_get_AllowGzip(swigCPtr, this);
  }

  public void put_AllowGzip(boolean newVal) {
    chilkatJNI.CkHttp_put_AllowGzip(swigCPtr, this, newVal);
  }

  public int get_BgPercentDone() {
    return chilkatJNI.CkHttp_get_BgPercentDone(swigCPtr, this);
  }

  public void get_RedirectVerb(CkString str) {
    chilkatJNI.CkHttp_get_RedirectVerb(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String redirectVerb() {
    return chilkatJNI.CkHttp_redirectVerb(swigCPtr, this);
  }

  public void put_RedirectVerb(String newVal) {
    chilkatJNI.CkHttp_put_RedirectVerb(swigCPtr, this, newVal);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkHttp_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkHttp_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkHttp_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public boolean ExtractMetaRefreshUrl(String html, CkString outStr) {
    return chilkatJNI.CkHttp_ExtractMetaRefreshUrl(swigCPtr, this, html, CkString.getCPtr(outStr), outStr);
  }

  public String extractMetaRefreshUrl(String html) {
    return chilkatJNI.CkHttp_extractMetaRefreshUrl(swigCPtr, this, html);
  }

  public void get_AwsAccessKey(CkString str) {
    chilkatJNI.CkHttp_get_AwsAccessKey(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String awsAccessKey() {
    return chilkatJNI.CkHttp_awsAccessKey(swigCPtr, this);
  }

  public void put_AwsAccessKey(String newVal) {
    chilkatJNI.CkHttp_put_AwsAccessKey(swigCPtr, this, newVal);
  }

  public void get_AwsSecretKey(CkString str) {
    chilkatJNI.CkHttp_get_AwsSecretKey(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String awsSecretKey() {
    return chilkatJNI.CkHttp_awsSecretKey(swigCPtr, this);
  }

  public void put_AwsSecretKey(String newVal) {
    chilkatJNI.CkHttp_put_AwsSecretKey(swigCPtr, this, newVal);
  }

  public boolean S3_ListBuckets(CkString outStr) {
    return chilkatJNI.CkHttp_S3_ListBuckets(swigCPtr, this, CkString.getCPtr(outStr), outStr);
  }

  public String s3_ListBuckets() {
    return chilkatJNI.CkHttp_s3_ListBuckets(swigCPtr, this);
  }

  public boolean S3_UploadString(String objectContent, String charset, String contentType, String bucketName, String ObjectName) {
    return chilkatJNI.CkHttp_S3_UploadString(swigCPtr, this, objectContent, charset, contentType, bucketName, ObjectName);
  }

  public boolean S3_DeleteObject(String bucketName, String objectName) {
    return chilkatJNI.CkHttp_S3_DeleteObject(swigCPtr, this, bucketName, objectName);
  }

  public boolean S3_UploadBytes(CkByteData objectContent, String contentType, String bucketName, String objectName) {
    return chilkatJNI.CkHttp_S3_UploadBytes(swigCPtr, this, CkByteData.getCPtr(objectContent), objectContent, contentType, bucketName, objectName);
  }

  public boolean S3_CreateBucket(String bucketName) {
    return chilkatJNI.CkHttp_S3_CreateBucket(swigCPtr, this, bucketName);
  }

  public boolean S3_DeleteBucket(String bucketName) {
    return chilkatJNI.CkHttp_S3_DeleteBucket(swigCPtr, this, bucketName);
  }

  public boolean S3_DownloadBytes(String bucketName, String objectName, CkByteData outBytes) {
    return chilkatJNI.CkHttp_S3_DownloadBytes(swigCPtr, this, bucketName, objectName, CkByteData.getCPtr(outBytes), outBytes);
  }

  public boolean S3_DownloadString(String bucketName, String objectName, String charset, CkString outStr) {
    return chilkatJNI.CkHttp_S3_DownloadString(swigCPtr, this, bucketName, objectName, charset, CkString.getCPtr(outStr), outStr);
  }

  public String s3_DownloadString(String bucketName, String objectName, String charset) {
    return chilkatJNI.CkHttp_s3_DownloadString(swigCPtr, this, bucketName, objectName, charset);
  }

  public boolean S3_ListBucketObjects(String bucketName, CkString outStr) {
    return chilkatJNI.CkHttp_S3_ListBucketObjects(swigCPtr, this, bucketName, CkString.getCPtr(outStr), outStr);
  }

  public String s3_ListBucketObjects(String bucketName) {
    return chilkatJNI.CkHttp_s3_ListBucketObjects(swigCPtr, this, bucketName);
  }

  public boolean S3_DownloadFile(String bucketName, String objectName, String localFilePath) {
    return chilkatJNI.CkHttp_S3_DownloadFile(swigCPtr, this, bucketName, objectName, localFilePath);
  }

  public boolean S3_UploadFile(String localFilePath, String contentType, String bucketName, String ObjectName) {
    return chilkatJNI.CkHttp_S3_UploadFile(swigCPtr, this, localFilePath, contentType, bucketName, ObjectName);
  }

  public boolean CloseAllConnections() {
    return chilkatJNI.CkHttp_CloseAllConnections(swigCPtr, this);
  }

  public boolean DownloadHash(String url, String hashAlgorithm, String encoding, CkString outStr) {
    return chilkatJNI.CkHttp_DownloadHash(swigCPtr, this, url, hashAlgorithm, encoding, CkString.getCPtr(outStr), outStr);
  }

  public String downloadHash(String url, String hashAlgorithm, String encoding) {
    return chilkatJNI.CkHttp_downloadHash(swigCPtr, this, url, hashAlgorithm, encoding);
  }

  public CkHttpResponse PostJson(String url, String jsonText) {
    long cPtr = chilkatJNI.CkHttp_PostJson(swigCPtr, this, url, jsonText);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, false);
  }

  public void get_AwsSubResources(CkString str) {
    chilkatJNI.CkHttp_get_AwsSubResources(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String awsSubResources() {
    return chilkatJNI.CkHttp_awsSubResources(swigCPtr, this);
  }

  public void put_AwsSubResources(String newVal) {
    chilkatJNI.CkHttp_put_AwsSubResources(swigCPtr, this, newVal);
  }

  public boolean get_S3Ssl() {
    return chilkatJNI.CkHttp_get_S3Ssl(swigCPtr, this);
  }

  public void put_S3Ssl(boolean newVal) {
    chilkatJNI.CkHttp_put_S3Ssl(swigCPtr, this, newVal);
  }

  public void get_ProxyLoginDomain(CkString str) {
    chilkatJNI.CkHttp_get_ProxyLoginDomain(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String proxyLoginDomain() {
    return chilkatJNI.CkHttp_proxyLoginDomain(swigCPtr, this);
  }

  public void put_ProxyLoginDomain(String newVal) {
    chilkatJNI.CkHttp_put_ProxyLoginDomain(swigCPtr, this, newVal);
  }

  public int get_SoSndBuf() {
    return chilkatJNI.CkHttp_get_SoSndBuf(swigCPtr, this);
  }

  public void put_SoSndBuf(int newVal) {
    chilkatJNI.CkHttp_put_SoSndBuf(swigCPtr, this, newVal);
  }

  public int get_SoRcvBuf() {
    return chilkatJNI.CkHttp_get_SoRcvBuf(swigCPtr, this);
  }

  public void put_SoRcvBuf(int newVal) {
    chilkatJNI.CkHttp_put_SoRcvBuf(swigCPtr, this, newVal);
  }

  public boolean get_OAuth1() {
    return chilkatJNI.CkHttp_get_OAuth1(swigCPtr, this);
  }

  public void put_OAuth1(boolean newVal) {
    chilkatJNI.CkHttp_put_OAuth1(swigCPtr, this, newVal);
  }

  public void get_OAuthConsumerKey(CkString str) {
    chilkatJNI.CkHttp_get_OAuthConsumerKey(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthConsumerKey() {
    return chilkatJNI.CkHttp_oAuthConsumerKey(swigCPtr, this);
  }

  public void put_OAuthConsumerKey(String newVal) {
    chilkatJNI.CkHttp_put_OAuthConsumerKey(swigCPtr, this, newVal);
  }

  public void get_OAuthRealm(CkString str) {
    chilkatJNI.CkHttp_get_OAuthRealm(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthRealm() {
    return chilkatJNI.CkHttp_oAuthRealm(swigCPtr, this);
  }

  public void put_OAuthRealm(String newVal) {
    chilkatJNI.CkHttp_put_OAuthRealm(swigCPtr, this, newVal);
  }

  public void get_OAuthSigMethod(CkString str) {
    chilkatJNI.CkHttp_get_OAuthSigMethod(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthSigMethod() {
    return chilkatJNI.CkHttp_oAuthSigMethod(swigCPtr, this);
  }

  public void put_OAuthSigMethod(String newVal) {
    chilkatJNI.CkHttp_put_OAuthSigMethod(swigCPtr, this, newVal);
  }

  public void get_OAuthToken(CkString str) {
    chilkatJNI.CkHttp_get_OAuthToken(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthToken() {
    return chilkatJNI.CkHttp_oAuthToken(swigCPtr, this);
  }

  public void put_OAuthToken(String newVal) {
    chilkatJNI.CkHttp_put_OAuthToken(swigCPtr, this, newVal);
  }

  public void get_OAuthTokenSecret(CkString str) {
    chilkatJNI.CkHttp_get_OAuthTokenSecret(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthTokenSecret() {
    return chilkatJNI.CkHttp_oAuthTokenSecret(swigCPtr, this);
  }

  public void put_OAuthTokenSecret(String newVal) {
    chilkatJNI.CkHttp_put_OAuthTokenSecret(swigCPtr, this, newVal);
  }

  public void get_OAuthVerifier(CkString str) {
    chilkatJNI.CkHttp_get_OAuthVerifier(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String oAuthVerifier() {
    return chilkatJNI.CkHttp_oAuthVerifier(swigCPtr, this);
  }

  public void put_OAuthVerifier(String newVal) {
    chilkatJNI.CkHttp_put_OAuthVerifier(swigCPtr, this, newVal);
  }

  public boolean SetSslClientCert(CkCert cert) {
    return chilkatJNI.CkHttp_SetSslClientCert(swigCPtr, this, CkCert.getCPtr(cert), cert);
  }

  public void get_LastHeader(CkString str) {
    chilkatJNI.CkHttp_get_LastHeader(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastHeader() {
    return chilkatJNI.CkHttp_lastHeader(swigCPtr, this);
  }

  public void put_UseIEProxy(boolean b) {
    chilkatJNI.CkHttp_put_UseIEProxy(swigCPtr, this, b);
  }

  public boolean get_UseIEProxy() {
    return chilkatJNI.CkHttp_get_UseIEProxy(swigCPtr, this);
  }

  public void get_ProxyLogin(CkString str) {
    chilkatJNI.CkHttp_get_ProxyLogin(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_ProxyLogin(String newVal) {
    chilkatJNI.CkHttp_put_ProxyLogin(swigCPtr, this, newVal);
  }

  public void get_ProxyPassword(CkString str) {
    chilkatJNI.CkHttp_get_ProxyPassword(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_ProxyPassword(String newVal) {
    chilkatJNI.CkHttp_put_ProxyPassword(swigCPtr, this, newVal);
  }

  public String proxyLogin() {
    return chilkatJNI.CkHttp_proxyLogin(swigCPtr, this);
  }

  public String proxyPassword() {
    return chilkatJNI.CkHttp_proxyPassword(swigCPtr, this);
  }

  public String version() {
    return chilkatJNI.CkHttp_version(swigCPtr, this);
  }

  public String cookieDir() {
    return chilkatJNI.CkHttp_cookieDir(swigCPtr, this);
  }

  public String quickGetStr(String url) {
    return chilkatJNI.CkHttp_quickGetStr(swigCPtr, this, url);
  }

  public String proxyDomain() {
    return chilkatJNI.CkHttp_proxyDomain(swigCPtr, this);
  }

  public String password() {
    return chilkatJNI.CkHttp_password(swigCPtr, this);
  }

  public String login() {
    return chilkatJNI.CkHttp_login(swigCPtr, this);
  }

  public String getRequestHeader(String name) {
    return chilkatJNI.CkHttp_getRequestHeader(swigCPtr, this, name);
  }

  public String userAgent() {
    return chilkatJNI.CkHttp_userAgent(swigCPtr, this);
  }

  public String referer() {
    return chilkatJNI.CkHttp_referer(swigCPtr, this);
  }

  public String ck_accept() {
    return chilkatJNI.CkHttp_ck_accept(swigCPtr, this);
  }

  public String acceptCharset() {
    return chilkatJNI.CkHttp_acceptCharset(swigCPtr, this);
  }

  public String acceptLanguage() {
    return chilkatJNI.CkHttp_acceptLanguage(swigCPtr, this);
  }

  public String connection() {
    return chilkatJNI.CkHttp_connection(swigCPtr, this);
  }

  public String getDomain(String url) {
    return chilkatJNI.CkHttp_getDomain(swigCPtr, this, url);
  }

  public String finalRedirectUrl() {
    return chilkatJNI.CkHttp_finalRedirectUrl(swigCPtr, this);
  }

  public String getCacheRoot(int index) {
    return chilkatJNI.CkHttp_getCacheRoot(swigCPtr, this, index);
  }

  public String getUrlPath(String url) {
    return chilkatJNI.CkHttp_getUrlPath(swigCPtr, this, url);
  }

  public String lastContentType() {
    return chilkatJNI.CkHttp_lastContentType(swigCPtr, this);
  }

  public String lastResponseHeader() {
    return chilkatJNI.CkHttp_lastResponseHeader(swigCPtr, this);
  }

  public String lastModDate() {
    return chilkatJNI.CkHttp_lastModDate(swigCPtr, this);
  }

  public void put_NtlmAuth(boolean b) {
    chilkatJNI.CkHttp_put_NtlmAuth(swigCPtr, this, b);
  }

  public boolean get_NtlmAuth() {
    return chilkatJNI.CkHttp_get_NtlmAuth(swigCPtr, this);
  }

  public boolean UnlockComponent(String unlockCode) {
    return chilkatJNI.CkHttp_UnlockComponent(swigCPtr, this, unlockCode);
  }

  public boolean IsUnlocked() {
    return chilkatJNI.CkHttp_IsUnlocked(swigCPtr, this);
  }

  public boolean Download(String url, String filename) {
    return chilkatJNI.CkHttp_Download(swigCPtr, this, url, filename);
  }

  public boolean ResumeDownload(String url, String filename) {
    return chilkatJNI.CkHttp_ResumeDownload(swigCPtr, this, url, filename);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkHttp_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public int get_MaxConnections() {
    return chilkatJNI.CkHttp_get_MaxConnections(swigCPtr, this);
  }

  public void put_MaxConnections(int n) {
    chilkatJNI.CkHttp_put_MaxConnections(swigCPtr, this, n);
  }

  public void put_CookieDir(String dir) {
    chilkatJNI.CkHttp_put_CookieDir(swigCPtr, this, dir);
  }

  public void get_CookieDir(CkString str) {
    chilkatJNI.CkHttp_get_CookieDir(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_SaveCookies(boolean b) {
    chilkatJNI.CkHttp_put_SaveCookies(swigCPtr, this, b);
  }

  public boolean get_SaveCookies() {
    return chilkatJNI.CkHttp_get_SaveCookies(swigCPtr, this);
  }

  public void put_SendCookies(boolean b) {
    chilkatJNI.CkHttp_put_SendCookies(swigCPtr, this, b);
  }

  public boolean get_SendCookies() {
    return chilkatJNI.CkHttp_get_SendCookies(swigCPtr, this);
  }

  public boolean QuickGet(String url, CkByteData data) {
    return chilkatJNI.CkHttp_QuickGet(swigCPtr, this, url, CkByteData.getCPtr(data), data);
  }

  public boolean QuickGetStr(String url, CkString str) {
    return chilkatJNI.CkHttp_QuickGetStr(swigCPtr, this, url, CkString.getCPtr(str), str);
  }

  public CkHttpResponse SynchronousRequest(String domain, int port, boolean ssl, CkHttpRequest req) {
    long cPtr = chilkatJNI.CkHttp_SynchronousRequest(swigCPtr, this, domain, port, ssl, CkHttpRequest.getCPtr(req), req);
    return (cPtr == 0) ? null : new CkHttpResponse(cPtr, true);
  }

  public int get_ProxyPort() {
    return chilkatJNI.CkHttp_get_ProxyPort(swigCPtr, this);
  }

  public void put_ProxyPort(int n) {
    chilkatJNI.CkHttp_put_ProxyPort(swigCPtr, this, n);
  }

  public void put_ProxyDomain(String v) {
    chilkatJNI.CkHttp_put_ProxyDomain(swigCPtr, this, v);
  }

  public void get_ProxyDomain(CkString str) {
    chilkatJNI.CkHttp_get_ProxyDomain(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_Login(String v) {
    chilkatJNI.CkHttp_put_Login(swigCPtr, this, v);
  }

  public void get_Login(CkString str) {
    chilkatJNI.CkHttp_get_Login(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_Password(String v) {
    chilkatJNI.CkHttp_put_Password(swigCPtr, this, v);
  }

  public void get_Password(CkString str) {
    chilkatJNI.CkHttp_get_Password(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void SetRequestHeader(String name, String value) {
    chilkatJNI.CkHttp_SetRequestHeader(swigCPtr, this, name, value);
  }

  public boolean GetRequestHeader(String name, CkString str) {
    return chilkatJNI.CkHttp_GetRequestHeader(swigCPtr, this, name, CkString.getCPtr(str), str);
  }

  public boolean HasRequestHeader(String name) {
    return chilkatJNI.CkHttp_HasRequestHeader(swigCPtr, this, name);
  }

  public void RemoveRequestHeader(String name) {
    chilkatJNI.CkHttp_RemoveRequestHeader(swigCPtr, this, name);
  }

  public void put_UserAgent(String v) {
    chilkatJNI.CkHttp_put_UserAgent(swigCPtr, this, v);
  }

  public void get_UserAgent(CkString str) {
    chilkatJNI.CkHttp_get_UserAgent(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_Referer(String v) {
    chilkatJNI.CkHttp_put_Referer(swigCPtr, this, v);
  }

  public void get_Referer(CkString str) {
    chilkatJNI.CkHttp_get_Referer(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_Accept(String v) {
    chilkatJNI.CkHttp_put_Accept(swigCPtr, this, v);
  }

  public void get_Accept(CkString str) {
    chilkatJNI.CkHttp_get_Accept(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_AcceptCharset(String v) {
    chilkatJNI.CkHttp_put_AcceptCharset(swigCPtr, this, v);
  }

  public void get_AcceptCharset(CkString str) {
    chilkatJNI.CkHttp_get_AcceptCharset(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_AcceptLanguage(String v) {
    chilkatJNI.CkHttp_put_AcceptLanguage(swigCPtr, this, v);
  }

  public void get_AcceptLanguage(CkString str) {
    chilkatJNI.CkHttp_get_AcceptLanguage(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_Connection(String v) {
    chilkatJNI.CkHttp_put_Connection(swigCPtr, this, v);
  }

  public void get_Connection(CkString str) {
    chilkatJNI.CkHttp_get_Connection(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public int get_MaxUrlLen() {
    return chilkatJNI.CkHttp_get_MaxUrlLen(swigCPtr, this);
  }

  public void put_MaxUrlLen(int n) {
    chilkatJNI.CkHttp_put_MaxUrlLen(swigCPtr, this, n);
  }

  public long get_MaxResponseSize() {
    return chilkatJNI.CkHttp_get_MaxResponseSize(swigCPtr, this);
  }

  public void put_MaxResponseSize(long n) {
    chilkatJNI.CkHttp_put_MaxResponseSize(swigCPtr, this, n);
  }

  public void put_MimicIE(boolean b) {
    chilkatJNI.CkHttp_put_MimicIE(swigCPtr, this, b);
  }

  public boolean get_MimicIE() {
    return chilkatJNI.CkHttp_get_MimicIE(swigCPtr, this);
  }

  public void put_MimicFireFox(boolean b) {
    chilkatJNI.CkHttp_put_MimicFireFox(swigCPtr, this, b);
  }

  public boolean get_MimicFireFox() {
    return chilkatJNI.CkHttp_get_MimicFireFox(swigCPtr, this);
  }

  public void put_AutoAddHostHeader(boolean b) {
    chilkatJNI.CkHttp_put_AutoAddHostHeader(swigCPtr, this, b);
  }

  public boolean get_AutoAddHostHeader() {
    return chilkatJNI.CkHttp_get_AutoAddHostHeader(swigCPtr, this);
  }

  public int get_ConnectTimeout() {
    return chilkatJNI.CkHttp_get_ConnectTimeout(swigCPtr, this);
  }

  public void put_ConnectTimeout(int numSeconds) {
    chilkatJNI.CkHttp_put_ConnectTimeout(swigCPtr, this, numSeconds);
  }

  public int get_ReadTimeout() {
    return chilkatJNI.CkHttp_get_ReadTimeout(swigCPtr, this);
  }

  public void put_ReadTimeout(int numSeconds) {
    chilkatJNI.CkHttp_put_ReadTimeout(swigCPtr, this, numSeconds);
  }

  public void GetDomain(String url, CkString str) {
    chilkatJNI.CkHttp_GetDomain(swigCPtr, this, url, CkString.getCPtr(str), str);
  }

  public boolean get_WasRedirected() {
    return chilkatJNI.CkHttp_get_WasRedirected(swigCPtr, this);
  }

  public void get_FinalRedirectUrl(CkString str) {
    chilkatJNI.CkHttp_get_FinalRedirectUrl(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_FollowRedirects(boolean b) {
    chilkatJNI.CkHttp_put_FollowRedirects(swigCPtr, this, b);
  }

  public boolean get_FollowRedirects() {
    return chilkatJNI.CkHttp_get_FollowRedirects(swigCPtr, this);
  }

  public void put_NumCacheLevels(int v) {
    chilkatJNI.CkHttp_put_NumCacheLevels(swigCPtr, this, v);
  }

  public int get_NumCacheLevels() {
    return chilkatJNI.CkHttp_get_NumCacheLevels(swigCPtr, this);
  }

  public int get_NumCacheRoots() {
    return chilkatJNI.CkHttp_get_NumCacheRoots(swigCPtr, this);
  }

  public boolean GetCacheRoot(int index, CkString str) {
    return chilkatJNI.CkHttp_GetCacheRoot(swigCPtr, this, index, CkString.getCPtr(str), str);
  }

  public void AddCacheRoot(String dir) {
    chilkatJNI.CkHttp_AddCacheRoot(swigCPtr, this, dir);
  }

  public int get_LastStatus() {
    return chilkatJNI.CkHttp_get_LastStatus(swigCPtr, this);
  }

  public void get_LastContentType(CkString strContentType) {
    chilkatJNI.CkHttp_get_LastContentType(swigCPtr, this, CkString.getCPtr(strContentType), strContentType);
  }

  public void get_LastResponseHeader(CkString strHeader) {
    chilkatJNI.CkHttp_get_LastResponseHeader(swigCPtr, this, CkString.getCPtr(strHeader), strHeader);
  }

  public void get_LastModDate(CkString str) {
    chilkatJNI.CkHttp_get_LastModDate(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public boolean get_UpdateCache() {
    return chilkatJNI.CkHttp_get_UpdateCache(swigCPtr, this);
  }

  public void put_UpdateCache(boolean b) {
    chilkatJNI.CkHttp_put_UpdateCache(swigCPtr, this, b);
  }

  public boolean get_FetchFromCache() {
    return chilkatJNI.CkHttp_get_FetchFromCache(swigCPtr, this);
  }

  public void put_FetchFromCache(boolean b) {
    chilkatJNI.CkHttp_put_FetchFromCache(swigCPtr, this, b);
  }

  public boolean get_IgnoreNoCache() {
    return chilkatJNI.CkHttp_get_IgnoreNoCache(swigCPtr, this);
  }

  public void put_IgnoreNoCache(boolean b) {
    chilkatJNI.CkHttp_put_IgnoreNoCache(swigCPtr, this, b);
  }

  public boolean get_IgnoreMustRevalidate() {
    return chilkatJNI.CkHttp_get_IgnoreMustRevalidate(swigCPtr, this);
  }

  public void put_IgnoreMustRevalidate(boolean b) {
    chilkatJNI.CkHttp_put_IgnoreMustRevalidate(swigCPtr, this, b);
  }

  public int get_DefaultFreshPeriod() {
    return chilkatJNI.CkHttp_get_DefaultFreshPeriod(swigCPtr, this);
  }

  public void put_DefaultFreshPeriod(int numMinutes) {
    chilkatJNI.CkHttp_put_DefaultFreshPeriod(swigCPtr, this, numMinutes);
  }

  public int get_FreshnessAlgorithm() {
    return chilkatJNI.CkHttp_get_FreshnessAlgorithm(swigCPtr, this);
  }

  public void put_FreshnessAlgorithm(int v) {
    chilkatJNI.CkHttp_put_FreshnessAlgorithm(swigCPtr, this, v);
  }

  public int get_LMFactor() {
    return chilkatJNI.CkHttp_get_LMFactor(swigCPtr, this);
  }

  public void put_LMFactor(int v) {
    chilkatJNI.CkHttp_put_LMFactor(swigCPtr, this, v);
  }

  public int get_MaxFreshPeriod() {
    return chilkatJNI.CkHttp_get_MaxFreshPeriod(swigCPtr, this);
  }

  public void put_MaxFreshPeriod(int numMinutes) {
    chilkatJNI.CkHttp_put_MaxFreshPeriod(swigCPtr, this, numMinutes);
  }

  public int get_MinFreshPeriod() {
    return chilkatJNI.CkHttp_get_MinFreshPeriod(swigCPtr, this);
  }

  public void put_MinFreshPeriod(int numMinutes) {
    chilkatJNI.CkHttp_put_MinFreshPeriod(swigCPtr, this, numMinutes);
  }

  public void GetUrlPath(String url, CkString str) {
    chilkatJNI.CkHttp_GetUrlPath(swigCPtr, this, url, CkString.getCPtr(str), str);
  }

  public boolean SaveLastError(String filename) {
    return chilkatJNI.CkHttp_SaveLastError(swigCPtr, this, filename);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkHttp_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkHttp_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkHttp_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

}
